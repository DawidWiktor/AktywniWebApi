//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AktywniWWW.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AktywniDBEntities : DbContext
    {
        public AktywniDBEntities()
            : base("name=AktywniDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__EFMigrationsHistory> C__EFMigrationsHistory { get; set; }
        public virtual DbSet<Abonaments> Abonaments { get; set; }
        public virtual DbSet<Disciplines> Disciplines { get; set; }
        public virtual DbSet<Events> Events { get; set; }
        public virtual DbSet<Friends> Friends { get; set; }
        public virtual DbSet<MessageEvent> MessageEvent { get; set; }
        public virtual DbSet<Messages> Messages { get; set; }
        public virtual DbSet<MessageUser> MessageUser { get; set; }
        public virtual DbSet<ObjectComments> ObjectComments { get; set; }
        public virtual DbSet<Objects> Objects { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<UserComments> UserComments { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<UsersEvents> UsersEvents { get; set; }
    
        public virtual int GetHistoryMessagesInEvent(Nullable<int> myId, Nullable<int> eventId, Nullable<int> latestMessageId)
        {
            var myIdParameter = myId.HasValue ?
                new ObjectParameter("myId", myId) :
                new ObjectParameter("myId", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var latestMessageIdParameter = latestMessageId.HasValue ?
                new ObjectParameter("latestMessageId", latestMessageId) :
                new ObjectParameter("latestMessageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetHistoryMessagesInEvent", myIdParameter, eventIdParameter, latestMessageIdParameter);
        }
    
        public virtual int GetHistoryMessagesInFriend(Nullable<int> myId, Nullable<int> friendId, Nullable<int> latestMessageId)
        {
            var myIdParameter = myId.HasValue ?
                new ObjectParameter("myId", myId) :
                new ObjectParameter("myId", typeof(int));
    
            var friendIdParameter = friendId.HasValue ?
                new ObjectParameter("friendId", friendId) :
                new ObjectParameter("friendId", typeof(int));
    
            var latestMessageIdParameter = latestMessageId.HasValue ?
                new ObjectParameter("latestMessageId", latestMessageId) :
                new ObjectParameter("latestMessageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetHistoryMessagesInFriend", myIdParameter, friendIdParameter, latestMessageIdParameter);
        }
    
        public virtual int GetLatestMessageInFriend(Nullable<int> myId, Nullable<int> friendId)
        {
            var myIdParameter = myId.HasValue ?
                new ObjectParameter("myId", myId) :
                new ObjectParameter("myId", typeof(int));
    
            var friendIdParameter = friendId.HasValue ?
                new ObjectParameter("friendId", friendId) :
                new ObjectParameter("friendId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetLatestMessageInFriend", myIdParameter, friendIdParameter);
        }
    
        public virtual int GetUnreadMessagesInFriend(Nullable<int> myId, Nullable<int> friendId)
        {
            var myIdParameter = myId.HasValue ?
                new ObjectParameter("myId", myId) :
                new ObjectParameter("myId", typeof(int));
    
            var friendIdParameter = friendId.HasValue ?
                new ObjectParameter("friendId", friendId) :
                new ObjectParameter("friendId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUnreadMessagesInFriend", myIdParameter, friendIdParameter);
        }
    
        public virtual int InsertMessage(Nullable<int> userFromId, Nullable<int> userId, Nullable<System.DateTime> date, string content)
        {
            var userFromIdParameter = userFromId.HasValue ?
                new ObjectParameter("userFromId", userFromId) :
                new ObjectParameter("userFromId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMessage", userFromIdParameter, userIdParameter, dateParameter, contentParameter);
        }
    
        public virtual int InsertMessageEvent(Nullable<int> userFromId, Nullable<int> userId, Nullable<int> eventId, Nullable<System.DateTime> date, string content)
        {
            var userFromIdParameter = userFromId.HasValue ?
                new ObjectParameter("userFromId", userFromId) :
                new ObjectParameter("userFromId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMessageEvent", userFromIdParameter, userIdParameter, eventIdParameter, dateParameter, contentParameter);
        }
    
        public virtual int SelectLastMessageEvent(Nullable<int> myId, Nullable<int> eventId)
        {
            var myIdParameter = myId.HasValue ?
                new ObjectParameter("myId", myId) :
                new ObjectParameter("myId", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectLastMessageEvent", myIdParameter, eventIdParameter);
        }
    
        public virtual int SelectMessageEvent(Nullable<int> myId, Nullable<int> eventId)
        {
            var myIdParameter = myId.HasValue ?
                new ObjectParameter("myId", myId) :
                new ObjectParameter("myId", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectMessageEvent", myIdParameter, eventIdParameter);
        }
    
        public virtual int SelectUnreadMessageEvent(Nullable<int> myId, Nullable<int> eventId)
        {
            var myIdParameter = myId.HasValue ?
                new ObjectParameter("myId", myId) :
                new ObjectParameter("myId", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectUnreadMessageEvent", myIdParameter, eventIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
